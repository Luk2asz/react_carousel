{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","this","props","images","animationDuration","frameSize","itemWidth","moveLeft","className","style","display","width","overflow","transition","map","image","index","listStyleType","transform","src","alt","slice","React","PureComponent","App","state","getInputs","x","input","document","getElementById","value","Number","prevButton","setState","left","setLeft","nextButton","size","length","type","marginTop","onClick","opacity","action","htmlFor","id","name","defaultValue","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.dd63cb2d.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  animationDuration: number;\n  frameSize: number;\n  itemWidth: number;\n  moveLeft: number\n};\n\nclass Carousel extends React.PureComponent<Props> {\n  render() {\n    const {\n      images,\n      animationDuration,\n      frameSize,\n      itemWidth,\n      moveLeft,\n    } = this.props;\n\n    return (\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          display: 'flex',\n          width: `${frameSize * (itemWidth + 10)}px`,\n          overflow: 'hidden',\n          transition: `all ${animationDuration}ms ease-out`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            key={index}\n            style={{ listStyleType: 'none' }}\n          >\n            <img\n              className=\"Carousel__img\"\n              style={{\n                width: `${itemWidth}px`,\n                transform: `translateX(${moveLeft}px)`,\n                transition: `all ${animationDuration}ms ease-out`,\n              }}\n              src={image}\n              alt={image.slice(6, 7)}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Carousel;\n","/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable no-mixed-operators */\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  animationDuration: number;\n  frameSize: number;\n  itemWidth: number;\n  moveLeft: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    animationDuration: 1000,\n    frameSize: 3,\n    itemWidth: 130,\n    moveLeft: 0,\n  };\n\n  getInputs = (x: string): number => {\n    const input = document.getElementById(x) as HTMLInputElement;\n    let value = 0;\n\n    if (input) {\n      value = Number(input.value);\n    }\n\n    return value;\n  };\n\n  prevButton = () => {\n    this.setState((state) => {\n      const width = this.getInputs('itemWidth') + 10;\n      let left = 0;\n      const setLeft = state.moveLeft / (this.state.itemWidth + 10) * width;\n\n      if (state.moveLeft <= this.getInputs('step') * -width) {\n        left = setLeft + this.getInputs('step') * width;\n      } else {\n        left = 0;\n      }\n\n      return {\n        animationDuration: this.getInputs('animationDuration'),\n        frameSize: this.getInputs('frameSize'),\n        itemWidth: this.getInputs('itemWidth'),\n        moveLeft: left,\n      };\n    });\n  };\n\n  nextButton = () => {\n    this.setState((state) => {\n      const width = this.getInputs('itemWidth') + 10;\n      const size = this.getInputs('frameSize') * width;\n      let left = 0;\n      const setLeft = state.moveLeft / (this.state.itemWidth + 10) * width;\n\n      if (state.moveLeft\n        <= -(10 * width) + size + (this.getInputs('step')) * width) {\n        left = -(10 * width) + size;\n      } else {\n        left = setLeft - (this.getInputs('step')) * width;\n      }\n\n      return {\n        animationDuration: this.getInputs('animationDuration'),\n        frameSize: this.getInputs('frameSize'),\n        itemWidth: this.getInputs('itemWidth'),\n        moveLeft: left,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      animationDuration,\n      frameSize,\n      itemWidth,\n      moveLeft,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          {/* eslint-disable-next-line */}\n          <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n          <div className=\"Carousel\">\n            {moveLeft !== 0\n              ? (\n                <button\n                  className=\"Carousel__arrow Carousel__arrow--left\"\n                  type=\"button\"\n                  style={{ marginTop: `${itemWidth / 2 - 15}px` }}\n                  onClick={this.prevButton}\n                >\n                  Prev\n                </button>\n              ) : (\n                <button\n                  className=\"Carousel__arrow Carousel__arrow--left\"\n                  type=\"button\"\n                  onClick={this.prevButton}\n                  style={{ opacity: '0' }}\n                >\n                  Prev\n                </button>\n              )}\n            <Carousel\n              images={images}\n              animationDuration={animationDuration}\n              frameSize={frameSize}\n              itemWidth={itemWidth}\n              moveLeft={moveLeft}\n            />\n\n            {moveLeft > -10 * (itemWidth + 10)\n            + this.getInputs('step') * (itemWidth + 10) && (\n              <button\n                className=\"Carousel__arrow Carousel__arrow--right\"\n                type=\"button\"\n                data-cy=\"next\"\n                style={{ marginTop: `${itemWidth / 2 - 15}px` }}\n                onClick={this.nextButton}\n              >\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n\n        <form action=\"\" className=\"form\">\n          <label htmlFor=\"itemWidth\">\n            item width:\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              name=\"itemWidth\"\n              defaultValue=\"130\"\n            />\n          </label>\n\n          <br />\n\n          <label htmlFor=\"frameSize\">frame size: </label>\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            name=\"frameSize\"\n            defaultValue=\"3\"\n          />\n\n          <br />\n\n          <label htmlFor=\"step\">step: </label>\n          <input\n            type=\"number\"\n            id=\"step\"\n            name=\"step\"\n            defaultValue=\"3\"\n          />\n\n          <br />\n\n          <label htmlFor=\"animationDuration\">animation duration(ms): </label>\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            name=\"animationDuration\"\n            defaultValue=\"1000\"\n          />\n\n          <br />\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}