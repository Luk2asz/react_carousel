{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","this","props","images","animationDuration","frameSize","itemWidth","moveLeft","className","style","width","transition","map","image","index","transform","src","alt","React","PureComponent","App","state","step","prevButton","setState","prevstate","setLeft","nextButton","size","changeItemWidth","e","Number","target","value","changeStep","changeFrameSize","steps","isButtonNext","length","type","marginTop","opacity","onClick","action","htmlFor","id","name","onChange","event","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc545441.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  animationDuration: number;\n  frameSize: number;\n  itemWidth: number;\n  moveLeft: number\n};\n\nclass Carousel extends React.PureComponent<Props> {\n  render() {\n    const {\n      images,\n      animationDuration,\n      frameSize,\n      itemWidth,\n      moveLeft,\n    } = this.props;\n\n    return (\n      <ul\n        className=\"carousel__list\"\n        style={{\n          width: `${frameSize * (itemWidth + 10)}px`,\n          transition: `all ${animationDuration}ms ease-out`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            className=\"carousel__element\"\n            key={image}\n          >\n            <img\n              className=\"carousel__img\"\n              style={{\n                width: `${itemWidth}px`,\n                transform: `translateX(${moveLeft}px)`,\n                transition: `all ${animationDuration}ms ease-out`,\n              }}\n              src={image}\n              alt={`icon-${index}`}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  animationDuration: number;\n  frameSize: number;\n  itemWidth: number;\n  moveLeft: number;\n  step: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    animationDuration: 1000,\n    frameSize: 3,\n    itemWidth: 130,\n    moveLeft: 0,\n    step: 3,\n  };\n\n  prevButton = () => {\n    this.setState((prevstate) => {\n      const width = prevstate.itemWidth + 10;\n      let left = 0;\n      // eslint-disable-next-line no-mixed-operators\n      const setLeft = prevstate.moveLeft / (prevstate.itemWidth + 10) * width;\n\n      if (prevstate.moveLeft <= prevstate.step * -width) {\n        left = setLeft + prevstate.step * width;\n      } else {\n        left = 0;\n      }\n\n      return {\n        moveLeft: left,\n      };\n    });\n  };\n\n  nextButton = () => {\n    this.setState((prevstate) => {\n      const width = prevstate.itemWidth + 10;\n      const size = prevstate.frameSize * width;\n      let left = 0;\n      // eslint-disable-next-line no-mixed-operators\n      const setLeft = prevstate.moveLeft / (width) * width;\n\n      if (prevstate.moveLeft\n        <= -(10 * width) + size + (prevstate.step) * width) {\n        left = -(10 * width) + size;\n      } else {\n        left = setLeft - (prevstate.step) * width;\n      }\n\n      return {\n        moveLeft: left,\n      };\n    });\n  };\n\n  changeItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevstate) => {\n      let width = Number(e.target.value);\n\n      if (Number(e.target.value) < 0) {\n        width = 0;\n      }\n\n      const left\n      // eslint-disable-next-line no-mixed-operators\n      = prevstate.moveLeft / (prevstate.itemWidth + 10) * (width + 10);\n\n      return {\n        itemWidth: width,\n        moveLeft: left,\n      };\n    });\n  };\n\n  changeStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (Number(e.target.value) < 1) {\n      this.setState({\n        step: 1,\n      });\n    } else if ((Number(e.target.value) > 9)) {\n      this.setState({\n        step: 9,\n      });\n    } else {\n      this.setState({\n        step: Number(e.target.value),\n      });\n    }\n  };\n\n  changeFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const steps = -this.state.moveLeft / (this.state.itemWidth + 10);\n\n    if (Number(e.target.value) < 1) {\n      this.setState({\n        frameSize: 1,\n      });\n    } else if ((Number(e.target.value) > 10 - steps)) {\n      this.setState({\n        frameSize: 10 - steps,\n      });\n    } else {\n      this.setState({\n        frameSize: Number(e.target.value),\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      animationDuration,\n      frameSize,\n      itemWidth,\n      moveLeft,\n      step,\n    } = this.state;\n\n    const isButtonNext = moveLeft > -10 * (itemWidth + 10)\n    + frameSize * (itemWidth + 10);\n\n    return (\n      <>\n        <div className=\"App\">\n          {/* eslint-disable-next-line */}\n          <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n          <div className=\"carousel\">\n            <button\n              className=\"carousel__arrow carousel__arrow--left\"\n              type=\"button\"\n              style={moveLeft !== 0\n                ? { marginTop: `${itemWidth / 2 - 15}px` }\n                : { opacity: '0' }}\n              onClick={this.prevButton}\n            >\n              Prev\n            </button>\n            <Carousel\n              images={images}\n              animationDuration={animationDuration}\n              frameSize={frameSize}\n              itemWidth={itemWidth}\n              moveLeft={moveLeft}\n            />\n\n            {isButtonNext && (\n              <button\n                className=\"carousel__arrow carousel__arrow--right\"\n                type=\"button\"\n                data-cy=\"next\"\n                style={{ marginTop: `${itemWidth / 2 - 15}px` }}\n                onClick={this.nextButton}\n              >\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n\n        <form action=\"\" className=\"form\">\n          <div className=\"container\">\n            <label htmlFor=\"itemWidth\">\n              item width:\n              <input\n                type=\"number\"\n                id=\"itemWidth\"\n                name=\"itemWidth\"\n                className=\"input\"\n                value={itemWidth}\n                onChange={\n                  (\n                    e: React.ChangeEvent<HTMLInputElement>,\n                  ) => this.changeItemWidth(e)\n                }\n              />\n            </label>\n          </div>\n\n          <div className=\"container\">\n            <label htmlFor=\"frameSize\">frame size: </label>\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              name=\"frameSize\"\n              className=\"input\"\n              value={frameSize}\n              onChange={\n                (\n                  e: React.ChangeEvent<HTMLInputElement>,\n                ) => this.changeFrameSize(e)\n              }\n            />\n          </div>\n\n          <div className=\"container\">\n            <label htmlFor=\"step\">step: </label>\n            <input\n              type=\"number\"\n              id=\"step\"\n              name=\"step\"\n              className=\"input\"\n              value={step}\n              onChange={\n                (\n                  e: React.ChangeEvent<HTMLInputElement>,\n                ) => this.changeStep(e)\n              }\n            />\n          </div>\n\n          <div className=\"container\">\n            <label htmlFor=\"animationDuration\">animation duration(ms): </label>\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              name=\"animationDuration\"\n              className=\"input\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: Number(event.target.value),\n                });\n              }}\n            />\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}